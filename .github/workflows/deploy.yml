name: CI/CD for Develop Branch

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 소스코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. AWS CLI 설정
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 3. Docker 로그인
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 905418468164.dkr.ecr.ap-northeast-2.amazonaws.com

    # 4. Backend Docker 이미지 빌드 및 푸시
    - name: Build and push backend image
      working-directory: ./backend/Resume-And-Portfolio
      run: |
        docker build -t 905418468164.dkr.ecr.ap-northeast-2.amazonaws.com/resume-backend-app:latest .
        docker push 905418468164.dkr.ecr.ap-northeast-2.amazonaws.com/resume-backend-app:latest

    # 5. Frontend Docker 이미지 빌드 및 푸시
    - name: Build and push frontend image
      working-directory: ./frontend/my-app
      run: |
        docker build -t 905418468164.dkr.ecr.ap-northeast-2.amazonaws.com/resume-frontend-app:latest .
        docker push 905418468164.dkr.ecr.ap-northeast-2.amazonaws.com/resume-frontend-app:latest

    # 6. SSH 키 추가
    - name: Add SSH key
      run: |
        echo "${{ secrets.EC2_KEY_PAIR }}" > ec2-key.pem
        chmod 600 ec2-key.pem

    # 7. EC2에 배포
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 905418468164.dkr.ecr.ap-northeast-2.amazonaws.com
          cd ~/app

          # 기존 컨테이너 중지 및 제거
          docker-compose down

          # 최신 이미지 풀링
          docker-compose pull

          # 환경 변수 파일 생성
          cat <<EOT > .env
          SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}
          SPRING_JPA_SHOW_SQL=${{ secrets.SPRING_JPA_SHOW_SQL }}
          REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}
          EOT

          # 컨테이너 재시작
          docker-compose up -d
        EOF
